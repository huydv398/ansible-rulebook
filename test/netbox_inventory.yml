---
- name: NetBox
  hosts: localhost
  connection: local
  gather_facts: no
  collections:
    - netbox.netbox
  # module_defaults:
  #   group/netbox.netbox.netbox:
  #     netbox_url: "{{ netbox_url }}"
  #     netbox_token: "{{ netbox_token }}"
  module_defaults:
    group/netbox.netbox.netbox:
      netbox_url: 'https://netbox.addc.local/'
      netbox_token: '8634e963dd1f51788a9d6fdc11e735d5f468fccb'
      validate_certs: no
  vars: 
    - Cluster_Type: Cluster_Type
    - token: '8634e963dd1f51788a9d6fdc11e735d5f468fccb'
    - api_endpoint: 'https://netbox.addc.local/'
    - clusters_vcenter_name: 'vcenter lab suncloud 2'
    - name_vm: 'huydv 01'
    - IP_vm: '192.168.1.0/24'
    - vm_interface: GigabitEthernet1
    - vcpus: 8
    - memory: 8
    - disk: 8
  tasks:
    - name: "Get Clusters"
      set_fact:
        clusters: "{{ query('netbox.netbox.nb_lookup', 'clusters',
                  api_endpoint=api_endpoint,
                  validate_certs=False,
                  token=token) | map(attribute='value.display') | list }}"
    - name: test
      debug:
        msg: "{{ clusters }}"    
        # msg: "{{ clusters | map(attribute='value.display') | list }}" 

    - name: Create cluster type within NetBox with only required information
      netbox.netbox.netbox_cluster_type:
        data:
          name: "{{ Cluster_Type }}"
        state: present

    - name: Create cluster within NetBox with only required information
      netbox.netbox.netbox_cluster:
        data:
          name: '{{ clusters_vcenter_name }}'
          cluster_type: "{{ Cluster_Type }}"
        state: present
      when: "clusters_vcenter_name not in clusters"

    - name: Create virtual machine within NetBox with only required information
      netbox_virtual_machine:
        data:
          name: '{{ name_vm }}'
          cluster: '{{ clusters_vcenter_name }}'
          vcpus: '{{ vcpus }}'
          memory: '{{ memory }}'
          disk: '{{ disk }}'
        state: present
    - name: Create interface within NetBox with only required information
      netbox_vm_interface:
        data:
          virtual_machine: '{{ name_vm }}'
          name: '{{ vm_interface }}'
        state: present

    - name: Add IP address to a virtual machine
      netbox.netbox.netbox_ip_address:
        data:
          address: "{{ IP_vm }}"                 
          status: "active"                            
          assigned_object: 
            virtual_machine: '{{ name_vm }}'
            name: '{{ vm_interface }}'
      register: ip_result




