- hosts: localhost
  gather_facts: False

  tasks:
    - name: Gather one specific VM
      community.vmware.vmware_vm_info:
        hostname: '{{ vcenter_hostname }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        vm_name: 'huyvm3'
        validate_certs: no
      delegate_to: localhost
      register: vm_info
      
    - name: Gather some info from a guest using the vSphere API output schema
      community.vmware.vmware_guest_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        name: "{{ ansible_eda.event.payload.backlog[0].fields.name_vm | default('huyvm3') }}"
        # name: Huydv-vm21082024

        schema: "vsphere"
        # properties: ["guest.net"]
        validate_certs: no
      delegate_to: localhost
      register: info
      retries: 5
      delay: 60
      until: info | json_query('instance.guest.net[].ipConfig.ipAddress[0].ipAddress') | length > 0
    
    # # - name: Set the message if the previous task failed
    # #   ansible.builtin.set_stats:
    # #     data: 
    # #       massage_event: "failed"
    # #   when: info.failed

    # - name: show IP VM
    #   debug:
    #     msg: "{{ info | json_query('instance.guest.net[].ipConfig.ipAddress[0].ipAddress') }}"

    - name: show info  VM
      debug:
        msg: "{{ info | json_query('instance.summary.config.numVirtualDisks') }}"
    # - name: Print disk information
    #   debug:
    #     msg: >
    #       {%- for disk in info.virtual_machines[0].disks %}
    #         Disk {{ disk.label }}: {{ disk.capacity_gb }} GB
    #       {%- endfor %}

    # - name: Update vcpus, memory and disk of an existing virtual machine
    #   netbox_virtual_machine:
    #     data:
    #       name: "{{ name }}"
    #       vcpus: "{{ info | json_query('instance.config.hardware.numCPU') }}"
    #       memory: {{ info | json_query('instance.config.hardware.memoryMB') }}
    #       disk: 8
    #       cluster: 
    #       platform:
          # primary_ip4:
          # status: 
          # custom_fields:
          #   Custom: huydv
          #   numVirtualDisks: "{{ info | json_query('instance.summary.config.numVirtualDisks') }}"

    #     state: present

    # - name: show IP VM
    #   debug:
    #     msg: "{{ info | json_query('instance.guest.net[].ipConfig.ipAddress[0].ipAddress') }}"

    # # - name: Set fact IP VM
    # #   ansible.builtin.set_stats:
    # #     data:
    # #       ipvm: "{{ info | json_query('instance.guest.net[].ipConfig.ipAddress[0].ipAddress') }}"

