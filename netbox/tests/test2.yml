# - name: Gather cluster information for vCenter
#   gather_facts: False
#   # connection: local
#   # collections:
#   #   - netbox.netbox
#   vars_files:
#     - /root/ansible-rolebook/netbox/inventory/group_vars/all/02.vcenter.yml
#   module_defaults:
#     group/netbox.netbox.netbox:
#       netbox_url: http://172.16.66.124:8000
#       netbox_token: '9d937a873ced4bf232571be636df540facfb23a7'
#   vars:
#     - netbox_url: 'http://172.16.66.124:8000'
#     - netbox_token: '9d937a873ced4bf232571be636df540facfb23a7'
#     - message: "mesage from HuyDV"
#     - hostname: "Server Web 01"
#     - IP: "{{  ansible_eda.event.payload.Address }}"
#     - object_type: 
#     - object_id:
#     - query: "netbox.netbox.nb_lookup, 'virtual-machines', api_endpoint={{netbox_url}}, token=9d937a873ced4bf232571be636df540facfb23a7"
#   hosts: localhost
- hosts: localhost
  gather_facts: False
  connection: local
  collections:
    - netbox.netbox
  vars:
    - netbox_url: 'http://172.16.66.124:8000'
    - netbox_token: '9d937a873ced4bf232571be636df540facfb23a7'
  tasks:
    - name: Define hostname in netbox  
      debug:
        msg: >
          "{{ query('netbox.netbox.nb_lookup', 'devices',
           api_endpoint=netbox_url,
           token=netbox_token) }}"
    # - name: Get devices from NetBox api_filter='\"' + netbox_url + '\"''
    #   set_fact:
    #     netbox_devices: "{{ lookup('netbox.netbox.nb_lookup', endpoint='dcim/devices/', query={'site': 'Data Center 1', 'role': 'router'}) }}"

    # - name: Print NetBox devices
    #   debug:
    #     var: netbox_devices
    #############################
    # queryの結果をそのまま出力
    #############################
    - name: show ip-address query(ntp)
      debug:
        msg: >
          "{{ query('netbox.netbox.nb_lookup', 'devices',
           api_endpoint=netbox_url,
           token=netbox_token) }}"
        # msg: "{{ query('netbox.netbox.nb_lookup', 'devices', api_filter='id=1', api_endpoint='http://172.16.66.124:8000', token='9d937a873ced4bf232571be636df540facfb23a7') }}"
        # msg: "{{ query('netbox.netbox.nb_lookup', 'virtual-machines', api_filter='status=active',  api_endpoint='http://172.16.66.124:8000', token='9d937a873ced4bf232571be636df540facfb23a7') }}"

  # tasks:

  # # query a list of devices
  # - name: "Get platform from Netbox"
  #   set_fact:
  #     platformos: |
  #       {{query({{qryfilter}})}}
  #   vars:
  #     qryfilter: "'netbox.netbox.nb_lookup', 'virtual-machines', api_filter='name=1628', api_endpoint={{netbox_url}}, token={{netbox_token}}"
  # - name: Obtain list of devices from Netbox
  #   debug:
  #     msg: "{{platformos}}"
  #     msg: "{{ check_objects| dict2items| json_query(query)| flatten }}"
  #     # "{{ query('networktocode.nautobot.lookup', 'vlans', api_filter='status=active group=\"' + group + '\"', api_endpoint=vars['url'], api_version='1.3', token=vars['token'], validate_certs=False) }}"
  #     # msg: >
  #     #   "Device {{ item.value.display }} (ID: {{ item.key }}) was
  #     #    manufactured by {{ item.value.device_type.manufacturer.name }}"

    # loop: "{{ query('netbox.netbox.nb_lookup', 'devices', api_endpoint='http://172.16.66.124:8000',  api_filter='item.value.display=Server Web 01', token='9d937a873ced4bf232571be636df540facfb23a7') }}"

    # - name: Define hostname in netbox  
    #   debug:
    #     msg: "{{item.value.display}} (ID: {{ item.key }}) manufactured by {{ item.value.device_type.manufacturer.name }}"
    #   loop: >
    #       "{{ query('netbox.netbox.nb_lookup', 'devices',
    #        api_endpoint='http://172.16.66.124:8000',
    #        token='9d937a873ced4bf232571be636df540facfb23a7') }}"
    # - name: Define hostname in netbox  
    #   debug:
    #     msg: "{{  ansible_eda.event.payload.Host }}"
    #   when:


  # query a list of devices
  # - name: Obtain list of devices from Netbox
  #   debug:
  #     msg: "{{ item }}"
  #   loop: "{{ query('netbox.netbox.nb_lookup', 'virtualization/virtual-machines', api_endpoint='http://172.16.66.124:8000', token='9d937a873ced4bf232571be636df540facfb23a7') }}"
  # - name: "Obtain bgp sessions for R1-Device"
  #   debug:
  #     # msg: "{{ query('netbox.netbox.nb_lookup', 'devices', api_filter='display=Server Web 01', api_endpoint='http://172.16.66.124:8000', token='9d937a873ced4bf232571be636df540facfb23a7', plugin='mycustomstuff') }}"
  #     msg: "{{ query('netbox.netbox.nb_lookup', 'devices', api_filter='id=1', api_endpoint='http://172.16.66.124:8000', token='9d937a873ced4bf232571be636df540facfb23a7') }}"
  #     # msg: "{{ query('netbox.netbox.nb_lookup', 'secrets', api_filter='device=R1-Device', api_endpoint='http://localhost/', token='<redacted>', key_file='~/.ssh/id_rsa') }}"
# ========
  # tasks:
  #   - name: IP Input event
  #     debug:
  #       msg: "{{ IP }}"


  #   - name: 1 - Get device details from NetBox
  #     uri:
  #         url: "{{ netbox_url }}/api/dcim/devices/"
  #         method: GET
  #         return_content: yes
  #         headers:
  #             accept: "application/json"
  #             Authorization: "Token {{ netbox_token }}"
  #     register: device

  #   - name: Teste 3
  #     debug:
  #       msg: "{{ device }}"

  #   - name: Lookup device by IP address
  #     ansible.builtin.set_fact:
  #       # device_id: "{{ lookup('ansible.netbox.netbox', 'ipam/ip-addresses', 'host=http://172.16.66.124:8000', 'token=9d937a873ced4bf232571be636df540facfb23a7', query='address=172.16.66.3') }}"
  #       device_id: "'netbox.netbox.nb_lookup', 'ipam/ip-addresses', api_filter='id=2', api_endpoint=http://172.16.66.124:8000, token=9d937a873ced4bf232571be636df540facfb23a7"
    
  #       # msg: "{{ device.json.results | json_query('[*].display') }}"
  #       # msg: "{{ device | json_query('*.neighbors')}}"
  #   # - debug:
  #   #     var: repo_cloned
  #   # - set_fact:
  #   #     output: "{{ ansible_eda.event }}" 
  #   #     msg: "Done! Poweron VM:"
  #   #     msg: "{{Create_vm}}"
  #   #     msg: "Done! Poweron VM: {{ .payload.snapshots.postchange.status }}"
  #   - name: Test 2
  #     debug:
  #       msg: "{{ device_id }}"
  #       # msg: "{{ device.json.results | json_query('[*].display') }}"
    
  #   # - name: Create a journal entry
  #   #   netbox.netbox.netbox_journal_entry:
  #   #     data:
  #   #       assigned_object_type: "dcim.device"
  #   #       assigned_object_id: "1"
  #   #       kind: success
  #   #       comments: |
  #   #         This is a journal entry
  #     # when: ip.changed