- name: Gather cluster information for vCenter
  gather_facts: 'no'
  vars_files:
    - /root/ansible-rolebook/netbox/inventory/group_vars/all/02.vcenter.yml
  hosts: localhost
  vars:
    - template: |-
        {%- if ansible_eda.event.payload.data.platform.id == 13 -%}
        temp-centos7
        {%- elif ansible_eda.event.payload.data.platform.id == 11 -%}
        TEMP-U22
        {%- else -%}
        other_value
        {%- endif -%}
    - guest_id: |-
        {%- if ansible_eda.event.payload.data.platform.id == 13 -%}
        centos7_64Guest
        {%- elif ansible_eda.event.payload.data.platform.id == 11 -%}
        ubuntu64Guest
        {%- else -%}
        other_value
        {%- endif -%}
    # - template: temp-centos7 
    - datastore_tmp: data
    # - guest_id: centos7_64Guest
    - vm_disk_type: thin
    - vm_disk_datastore: 'DATA02'
    - vm_hardware_controller: paravirtual
  tasks:
    - name: Create a VM folder on given datacenter
      # debug:
      #   msg: "{{ template }} {{ guest_id }}"
      community.vmware.vcenter_folder:
        hostname: '{{ vcenter_server }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_pass }}'
        validate_certs: '{{ ova_validate_certs }}'
        datacenter: "{{ datacenter }}"
        folder_name: "{{ ansible_eda.event.payload.data.tenant.name }}"
        folder_type: vm
        state: present
    - name: Create a New Virtual Machine
      vmware_guest:
        hostname: '{{ vcenter_server }}'
        username: '{{ vcenter_user }}'
        password: '{{ vcenter_pass }}'
        validate_certs: '{{ ova_validate_certs }}'
        datacenter: '{{ datacenter }}'
        cluster: "{{ ansible_eda.event.payload.data.cluster.name }}"
        folder: '{{ ansible_eda.event.payload.data.tenant.name }}'
        template: '{{ template }}'
        datastore: '{{ datastore_tmp }}'
        name: '{{ ansible_eda.event.payload.data.name | upper }}'
        guest_id: '{{ guest_id }}'
        disk:
          - size_gb: '{{ ansible_eda.event.payload.data.disk }}'
            type: '{{ vm_disk_type }}'
            datastore: '{{ vm_disk_datastore }}'
        hardware:
          memory_mb: '{{ ansible_eda.event.payload.data.memory }}'
          num_cpus: '{{ ansible_eda.event.payload.snapshots.postchange.vcpus }}'
          scsi: '{{ vm_hardware_controller }}'
        state: poweredon
        # wait_for_customization: yes # tự động bật máy ảo khi hoàn thành
      register: status
      delegate_to: localhost
    - name: Push out event
      set_fact:
        cacheable: true
        output_status: "{{status}}"
        eda: "{{ansible_eda.event.payload}}"

# - name: Gather cluster information for vCenter
#   gather_facts: false
#   vars_files:
#     - /root/ansible-rolebook/netbox/inventory/group_vars/all/02.vcenter.yml
#   hosts: localhost
#   vars:
#     - template: template-centos7
#     - datastore_tmp: data
#     - guest_id: centos7_64Guest
#     - vm_disk_type: thin
#     - vm_disk_datastore: DATA02
#     - vm_hardware_controller: paravirtual
#     # - check_fol: "{{ ansible_eda.event.payload.data.tenant.name }}"
#   tasks:
#     - name: Create a New Virtual Machine
#       vmware_guest:
#         hostname: '{{ vcenter_server }}'
#         username: '{{ vcenter_user }}'
#         password: '{{ vcenter_pass }}'
#         validate_certs: '{{ ova_validate_certs }}'
#         datacenter: '{{ datacenter }}'
#         cluster: '{{ cluster_name }}'
#         folder: '{{ ansible_eda.event.payload.data.tenant.name }}'
#         template: '{{ template }}'
#         datastore: '{{ datastore_tmp }}'
#         name: '{{ ansible_eda.event.payload.data.name | upper }}'
#         guest_id: '{{ guest_id }}'
#         disk:
#           - size_gb: '{{ ansible_eda.event.payload.data.disk }}'
#             type: '{{ vm_disk_type }}'
#             datastore: '{{ vm_disk_datastore }}'
#         hardware:
#           memory_mb: '{{ ansible_eda.event.payload.data.memory }}'
#           num_cpus: '{{ ansible_eda.event.payload.snapshots.postchange.vcpus }}'
#           scsi: '{{ vm_hardware_controller }}'
#         state: poweredon
#         # wait_for_customization: yes # tự động bật máy ảo khi hoàn thành
#       register: status
  #     delegate_to: localhost
  #   - name: Find Guest's Folder using name
  #     community.vmware.vmware_guest_find:
  #       hostname: '{{ vcenter_server }}'
  #       username: '{{ vcenter_user }}'
  #       password: '{{ vcenter_pass }}'
  #       validate_certs: '{{ ova_validate_certs }}'
  #       name: "{{ ansible_eda.event.payload.data.name | upper }}"
  #     delegate_to: localhost
  #     register: output_status
  # # https://github.com/saito-hideki/event-driven-ansible/blob/7d84d9cca37428f6817da2bbc60c73d21672acbb/extensions/eda/rulebooks/git-hook-test-rules.yml#L13
  # # https://github.com/saito-hideki/event-driven-ansible/blob/7d84d9cca37428f6817da2bbc60c73d21672acbb/run_pytest.yml
  #   - name: Extract switch name from text
  #     set_fact:
  #       cacheable: true
  #       output_status: "{{output_status}}"
  #       eda: "{{ansible_eda.event.payload}}"
        
    # - debug:
    #     var: repo_cloned
    # - set_fact:
    #     output: "{{ ansible_eda.event }}" 
        # msg: "Done! Poweron VM:"
        # msg: "{{Create_vm}}"
        # msg: "Done! Poweron VM: {{ .payload.snapshots.postchange.status }}"